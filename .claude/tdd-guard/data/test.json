{
  "testModules": [
    {
      "moduleId": "/home/family/src/serverless-cookbook/src/terraform-example-fetcher.test.ts",
      "tests": [
        {
          "name": "should fetch all files from a terraform example directory",
          "fullName": "terraform-example-fetcher fetchTerraformExample should fetch all files from a terraform example directory",
          "state": "passed"
        },
        {
          "name": "should handle empty directories gracefully",
          "fullName": "terraform-example-fetcher fetchTerraformExample should handle empty directories gracefully",
          "state": "passed"
        },
        {
          "name": "should format terraform files as markdown with proper code blocks",
          "fullName": "terraform-example-fetcher formatExampleAsMarkdown should format terraform files as markdown with proper code blocks",
          "state": "passed"
        },
        {
          "name": "should handle files with different extensions appropriately",
          "fullName": "terraform-example-fetcher formatExampleAsMarkdown should handle files with different extensions appropriately",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/family/src/serverless-cookbook/src/github-repository-service.test.ts",
      "tests": [
        {
          "name": "should fetch repository README content",
          "fullName": "GitHub Repository Service should fetch repository README content",
          "state": "passed"
        },
        {
          "name": "should extract owner and repo from GitHub URL",
          "fullName": "GitHub Repository Service should extract owner and repo from GitHub URL",
          "state": "passed"
        },
        {
          "name": "should fail for invalid GitHub URL",
          "fullName": "GitHub Repository Service should fail for invalid GitHub URL",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/family/src/serverless-cookbook/src/environment-validator.test.ts",
      "tests": [
        {
          "name": "should validate GitHub token is present for real data extraction",
          "fullName": "Environment Validator should validate GitHub token is present for real data extraction",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/family/src/serverless-cookbook/src/serverless-tf-extractor.test.ts",
      "tests": [
        {
          "name": "should extract all AWS services with repository and example links",
          "fullName": "Comprehensive AWS Serverless Scraper should extract all AWS services with repository and example links",
          "state": "pending"
        },
        {
          "name": "should use real Terraform AWS module repository URLs",
          "fullName": "Comprehensive AWS Serverless Scraper should use real Terraform AWS module repository URLs",
          "state": "pending"
        },
        {
          "name": "should include all 18 AWS serverless services",
          "fullName": "Comprehensive AWS Serverless Scraper should include all 18 AWS serverless services",
          "state": "pending"
        },
        {
          "name": "should include documentation with README, variables, and outputs for each service",
          "fullName": "Comprehensive AWS Serverless Scraper should include documentation with README, variables, and outputs for each service",
          "state": "pending"
        },
        {
          "name": "should fetch real data from GitHub using GITHUB_TOKEN when available",
          "fullName": "Comprehensive AWS Serverless Scraper should fetch real data from GitHub using GITHUB_TOKEN when available",
          "state": "passed"
        },
        {
          "name": "should populate real README content when GITHUB_TOKEN is available",
          "fullName": "Comprehensive AWS Serverless Scraper should populate real README content when GITHUB_TOKEN is available",
          "state": "passed"
        },
        {
          "name": "should return basic catalog when GITHUB_TOKEN is missing",
          "fullName": "Comprehensive AWS Serverless Scraper should return basic catalog when GITHUB_TOKEN is missing",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/family/src/serverless-cookbook/src/scraper-runner.test.ts",
      "tests": [
        {
          "name": "should generate JSON file with all 12 AWS services",
          "fullName": "scraper-runner should generate JSON file with all 12 AWS services",
          "state": "passed"
        },
        {
          "name": "should write terraform-aws-services.json file",
          "fullName": "scraper-runner should write terraform-aws-services.json file",
          "state": "passed"
        }
      ]
    },
    {
      "moduleId": "/home/family/src/serverless-cookbook/src/docs-generator.test.ts",
      "tests": [
        {
          "name": "should extract service tags from example",
          "fullName": "docs-generator extractServiceTags should extract service tags from example",
          "state": "passed"
        },
        {
          "name": "should return beginner for simple examples",
          "fullName": "docs-generator generateDifficultyLevel should return beginner for simple examples",
          "state": "passed"
        },
        {
          "name": "should return intermediate for complex examples",
          "fullName": "docs-generator generateDifficultyLevel should return intermediate for complex examples",
          "state": "passed"
        },
        {
          "name": "should generate valid markdown with frontmatter",
          "fullName": "docs-generator generatePatternMarkdown should generate valid markdown with frontmatter",
          "state": "failed",
          "errors": [
            {
              "message": "TypeError: (0 , docs_generator_js_1.generatePatternMarkdown) is not a function\n    at Object.<anonymous> (/home/family/src/serverless-cookbook/src/docs-generator.test.ts:54:47)\n    at Promise.finally.completed (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/home/family/src/serverless-cookbook/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/home/family/src/serverless-cookbook/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/home/family/src/serverless-cookbook/node_modules/jest-runner/build/testWorker.js:497:12)"
            }
          ]
        },
        {
          "name": "should handle missing markdown content gracefully",
          "fullName": "docs-generator generatePatternMarkdown should handle missing markdown content gracefully",
          "state": "failed",
          "errors": [
            {
              "message": "TypeError: (0 , docs_generator_js_1.generatePatternMarkdown) is not a function\n    at Object.<anonymous> (/home/family/src/serverless-cookbook/src/docs-generator.test.ts:72:47)\n    at Promise.finally.completed (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1559:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1499:10)\n    at _callCircusTest (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1009:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:949:3)\n    at _runTestsForDescribeBlock (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:839:13)\n    at _runTestsForDescribeBlock (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at _runTestsForDescribeBlock (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:829:11)\n    at run (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:757:3)\n    at runAndTransformResultsToJestFormat (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/jestAdapterInit.js:1920:21)\n    at jestAdapter (/home/family/src/serverless-cookbook/node_modules/jest-circus/build/runner.js:101:19)\n    at runTestInternal (/home/family/src/serverless-cookbook/node_modules/jest-runner/build/testWorker.js:275:16)\n    at runTest (/home/family/src/serverless-cookbook/node_modules/jest-runner/build/testWorker.js:343:7)\n    at Object.worker (/home/family/src/serverless-cookbook/node_modules/jest-runner/build/testWorker.js:497:12)"
            }
          ]
        }
      ]
    }
  ],
  "unhandledErrors": [],
  "reason": "failed"
}